/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module game_miniBeta_2 (
    input main_button,
    input reset_button,
    input clk,
    input rst,
    output reg decimal_counter_increase,
    output reg decimal_counter_rst,
    output reg led_data
  );
  
  
  
  reg [15:0] inputAlu_a;
  
  reg [15:0] inputAlu_b;
  
  wire [16-1:0] M_game_alu_out;
  wire [3-1:0] M_game_alu_zvn;
  reg [16-1:0] M_game_alu_a;
  reg [16-1:0] M_game_alu_b;
  reg [6-1:0] M_game_alu_alufn_signal;
  alu_10 game_alu (
    .a(M_game_alu_a),
    .b(M_game_alu_b),
    .alufn_signal(M_game_alu_alufn_signal),
    .out(M_game_alu_out),
    .zvn(M_game_alu_zvn)
  );
  
  wire [6-1:0] M_game_controlunit_alufn;
  wire [3-1:0] M_game_controlunit_asel;
  wire [3-1:0] M_game_controlunit_bsel;
  wire [2-1:0] M_game_controlunit_alu_out_sel;
  wire [4-1:0] M_game_controlunit_regfile_write_address;
  wire [4-1:0] M_game_controlunit_regfile_read_address_a;
  wire [4-1:0] M_game_controlunit_regfile_read_address_b;
  wire [1-1:0] M_game_controlunit_we_regfile;
  wire [1-1:0] M_game_controlunit_decimal_counter_increase;
  wire [1-1:0] M_game_controlunit_decimal_counter_rst;
  wire [4-1:0] M_game_controlunit_debug;
  reg [16-1:0] M_game_controlunit_regfile_datain;
  reg [1-1:0] M_game_controlunit_main_button;
  reg [1-1:0] M_game_controlunit_reset_button;
  game_CU_11 game_controlunit (
    .clk(clk),
    .rst(rst),
    .regfile_datain(M_game_controlunit_regfile_datain),
    .main_button(M_game_controlunit_main_button),
    .reset_button(M_game_controlunit_reset_button),
    .alufn(M_game_controlunit_alufn),
    .asel(M_game_controlunit_asel),
    .bsel(M_game_controlunit_bsel),
    .alu_out_sel(M_game_controlunit_alu_out_sel),
    .regfile_write_address(M_game_controlunit_regfile_write_address),
    .regfile_read_address_a(M_game_controlunit_regfile_read_address_a),
    .regfile_read_address_b(M_game_controlunit_regfile_read_address_b),
    .we_regfile(M_game_controlunit_we_regfile),
    .decimal_counter_increase(M_game_controlunit_decimal_counter_increase),
    .decimal_counter_rst(M_game_controlunit_decimal_counter_rst),
    .debug(M_game_controlunit_debug)
  );
  wire [16-1:0] M_players_out_a;
  wire [16-1:0] M_players_out_b;
  wire [16-1:0] M_players_dot_loc;
  wire [16-1:0] M_players_column1output;
  wire [16-1:0] M_players_column2output;
  wire [16-1:0] M_players_column3output;
  wire [16-1:0] M_players_column4output;
  wire [16-1:0] M_players_column5output;
  wire [16-1:0] M_players_column6output;
  wire [16-1:0] M_players_column7output;
  wire [16-1:0] M_players_column8output;
  reg [4-1:0] M_players_write_address;
  reg [1-1:0] M_players_we;
  reg [16-1:0] M_players_data;
  reg [4-1:0] M_players_read_address_a;
  reg [4-1:0] M_players_read_address_b;
  game_miniRegfiles_12 players (
    .clk(clk),
    .rst(rst),
    .write_address(M_players_write_address),
    .we(M_players_we),
    .data(M_players_data),
    .read_address_a(M_players_read_address_a),
    .read_address_b(M_players_read_address_b),
    .out_a(M_players_out_a),
    .out_b(M_players_out_b),
    .dot_loc(M_players_dot_loc),
    .column1output(M_players_column1output),
    .column2output(M_players_column2output),
    .column3output(M_players_column3output),
    .column4output(M_players_column4output),
    .column5output(M_players_column5output),
    .column6output(M_players_column6output),
    .column7output(M_players_column7output),
    .column8output(M_players_column8output)
  );
  wire [1-1:0] M_display_driver_out;
  reg [16-1:0] M_display_driver_dot_location;
  reg [16-1:0] M_display_driver_column1output;
  reg [16-1:0] M_display_driver_column2output;
  reg [16-1:0] M_display_driver_column3output;
  reg [16-1:0] M_display_driver_column4output;
  reg [16-1:0] M_display_driver_column5output;
  reg [16-1:0] M_display_driver_column6output;
  reg [16-1:0] M_display_driver_column7output;
  reg [16-1:0] M_display_driver_column8output;
  game_LED_13 display_driver (
    .clk(clk),
    .rst(rst),
    .dot_location(M_display_driver_dot_location),
    .column1output(M_display_driver_column1output),
    .column2output(M_display_driver_column2output),
    .column3output(M_display_driver_column3output),
    .column4output(M_display_driver_column4output),
    .column5output(M_display_driver_column5output),
    .column6output(M_display_driver_column6output),
    .column7output(M_display_driver_column7output),
    .column8output(M_display_driver_column8output),
    .out(M_display_driver_out)
  );
  
  always @* begin
    M_game_controlunit_main_button = main_button;
    M_game_controlunit_reset_button = reset_button;
    decimal_counter_increase = M_game_controlunit_decimal_counter_increase;
    decimal_counter_rst = M_game_controlunit_decimal_counter_rst;
    M_players_we = M_game_controlunit_we_regfile;
    M_players_write_address = M_game_controlunit_regfile_write_address;
    M_players_read_address_a = M_game_controlunit_regfile_read_address_a;
    M_players_read_address_b = M_game_controlunit_regfile_read_address_b;
    M_game_controlunit_regfile_datain = M_players_out_b;
    M_display_driver_dot_location = M_players_dot_loc;
    M_display_driver_column1output = M_players_column1output;
    M_display_driver_column2output = M_players_column2output;
    M_display_driver_column3output = M_players_column3output;
    M_display_driver_column4output = M_players_column4output;
    M_display_driver_column5output = M_players_column5output;
    M_display_driver_column6output = M_players_column6output;
    M_display_driver_column7output = M_players_column7output;
    M_display_driver_column8output = M_players_column8output;
    
    case (M_game_controlunit_asel)
      2'h0: begin
        inputAlu_a = M_players_out_a;
      end
      2'h1: begin
        inputAlu_a = 16'h0001;
      end
      2'h2: begin
        inputAlu_a = 16'h0080;
      end
      2'h3: begin
        inputAlu_a = 16'h0000;
      end
      default: begin
        inputAlu_a = 1'h0;
      end
    endcase
    
    case (M_game_controlunit_bsel)
      2'h0: begin
        inputAlu_b = M_players_out_b;
      end
      2'h1: begin
        inputAlu_b = 16'h0001;
      end
      2'h3: begin
        inputAlu_b = 16'h0003;
      end
      2'h2: begin
        inputAlu_b = 16'h0000;
      end
      default: begin
        inputAlu_b = 1'h0;
      end
    endcase
    M_game_alu_a = inputAlu_a;
    M_game_alu_b = inputAlu_b;
    M_game_alu_alufn_signal = M_game_controlunit_alufn;
    
    case (M_game_controlunit_alu_out_sel)
      2'h1: begin
        M_players_data = 16'h0000;
      end
      2'h2: begin
        M_players_data = 16'h0010;
      end
      2'h3: begin
        M_players_data = 16'hffff;
      end
      default: begin
        M_players_data = M_game_alu_out;
      end
    endcase
    led_data = M_display_driver_out;
  end
endmodule
