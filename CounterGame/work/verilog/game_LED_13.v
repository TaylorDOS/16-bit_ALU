/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module game_LED_13 (
    input clk,
    input rst,
    input [15:0] dot_location,
    input [15:0] column1output,
    input [15:0] column2output,
    input [15:0] column3output,
    input [15:0] column4output,
    input [15:0] column5output,
    input [15:0] column6output,
    input [15:0] column7output,
    input [15:0] column8output,
    output reg out
  );
  
  
  
  localparam COLOR = 48'h100000001000;
  
  wire [6-1:0] M_led_strip_pixel;
  wire [1-1:0] M_led_strip_led;
  reg [1-1:0] M_led_strip_update;
  reg [24-1:0] M_led_strip_color;
  ws2812b_writer_20 led_strip (
    .clk(clk),
    .rst(rst),
    .update(M_led_strip_update),
    .color(M_led_strip_color),
    .pixel(M_led_strip_pixel),
    .led(M_led_strip_led)
  );
  
  wire [64-1:0] M_pixels_out_out;
  reg [6-1:0] M_pixels_out_in;
  decoder_21 pixels_out (
    .in(M_pixels_out_in),
    .out(M_pixels_out_out)
  );
  
  reg p_color;
  
  integer row1;
  
  integer row2;
  
  integer row3;
  
  integer row4;
  
  integer row5;
  
  integer row6;
  
  integer row7;
  
  integer row8;
  
  integer pixels;
  
  always @* begin
    M_led_strip_update = 1'h1;
    M_pixels_out_in = M_led_strip_pixel;
    row1 = column1output[7+0-:1] + column2output[7+0-:1] + column3output[7+0-:1] + column4output[7+0-:1] + column5output[7+0-:1] + column6output[7+0-:1] + column7output[7+0-:1] + column8output[7+0-:1];
    row3 = column1output[5+0-:1] + column2output[5+0-:1] + column3output[5+0-:1] + column4output[5+0-:1] + column5output[5+0-:1] + column6output[5+0-:1] + column7output[5+0-:1] + column8output[5+0-:1];
    row5 = column1output[3+0-:1] + column2output[3+0-:1] + column3output[3+0-:1] + column4output[3+0-:1] + column5output[3+0-:1] + column6output[3+0-:1] + column7output[3+0-:1] + column8output[3+0-:1];
    row7 = column1output[1+0-:1] + column2output[1+0-:1] + column3output[1+0-:1] + column4output[1+0-:1] + column5output[1+0-:1] + column6output[1+0-:1] + column7output[1+0-:1] + column8output[1+0-:1];
    row2 = column8output[6+0-:1] + column7output[6+0-:1] + column6output[6+0-:1] + column5output[6+0-:1] + column4output[6+0-:1] + column3output[6+0-:1] + column2output[6+0-:1] + column1output[6+0-:1];
    row4 = column8output[4+0-:1] + column7output[4+0-:1] + column6output[4+0-:1] + column5output[4+0-:1] + column4output[4+0-:1] + column3output[4+0-:1] + column2output[4+0-:1] + column1output[4+0-:1];
    row6 = column8output[2+0-:1] + column7output[2+0-:1] + column6output[2+0-:1] + column5output[2+0-:1] + column4output[2+0-:1] + column3output[2+0-:1] + column2output[2+0-:1] + column1output[2+0-:1];
    row8 = column8output[0+0-:1] + column7output[0+0-:1] + column6output[0+0-:1] + column5output[0+0-:1] + column4output[0+0-:1] + column3output[0+0-:1] + column2output[0+0-:1] + column1output[0+0-:1];
    pixels = row1 + row2 + row3 + row4 + row5 + row6 + row7 + row8;
    p_color = (|(pixels & M_pixels_out_out));
    if (p_color) begin
      M_led_strip_color = 24'h100000;
    end else begin
      M_led_strip_color = 1'h0;
    end
    out = M_led_strip_led;
  end
endmodule
